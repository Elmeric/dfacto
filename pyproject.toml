[tool]
[tool.poetry]
name = "dfacto"
version = "0.1.0"
description = "Dfacto: manage your invoices."
authors = ["Eric Lemoine <erik.lemoine@gmail.com>"]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://github.com/Elmeric/dfacto"
repository = "https://github.com/Elmeric/dfacto"
documentation = "https://Elmeric.github.io/dfacto"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Topic :: Software Development :: Libraries",
]
packages = [{include = "dfacto", from = "src"}]


[tool.poetry.dependencies]
python = "^3.7.2"
typing-extensions = {version = "^4.4.0", python = "<3.8"}
sqlalchemy = "2.0.0rc1"


[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-cov = "^4.0.0"
invoke = "^1.7.3"


[tool.poetry.group.dev.dependencies]
pylint = { version = "^2.15.5", python = ">=3.7.2,<4.0" }
mypy = "^0.982"
pre-commit = "^2.20.0"
invoke = "^1.7.3"
black = {version = "^22.10.0", extras = ["colorama"]}
isort = {version = "^5.10.1", extras = ["colors"]}


[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocstrings = {version = "^0.19.0", extras = ["python"]}
mkdocs-material = {version = "^8.5.10", extras = ["python"]}
pymdown-extensions = "^9.9"
markdown-callouts = "^0.3.0"
invoke = "^1.7.3"


[tool.black]
target-version = ["py37", "py38", "py39", "py310", "py311"]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--import-mode=importlib",
    "--cov-report=term-missing",
    "--cov-branch",
]
testpaths = [
    "tests",
]
markers = [
    "crud: marks CRUD integration tests using an in-memory database (deselect with '-m \"not crud\"')",
    "api",
]
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
